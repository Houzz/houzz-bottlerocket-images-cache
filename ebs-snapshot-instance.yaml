# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: 2010-09-09
Description: Bottlerocket instance to snapshot data volume with configurable network settings.

Parameters:
  AmiID:
    Type: AWS::EC2::Image::Id
    Description: "The ID of the AMI."
    Default: ami-06925b13649acba0a # bottlerocket-aws-k8s-1.32-nvidia-x86_64-v1.45.0-2f4223e5
  InstanceType:
    Type: String
    Description: "EC2 instance type to launch"
    Default: m5.large
  InstanceRole:
    Type: String
    Description: "Name of IAM Role used in instance"
    Default: NONE
  Encrypt:
    Type: String
    Description: "Encrypt the AMI"
    Default: NONE
  KMSId:
    Type: String
    Description: "Id of the KMS Key used for the snapshot"
    Default: NONE
  SnapshotSize:
    Type: Number
    Description: "Size of the target snapshot"
    Default: 50
  SecurityGroupId:
    Type: String
    Description: "Optional Security Group ID. If not provided, the default VPC security group will be used."
    Default: NONE
  SubnetId:
    Type: String
    Description: "Optional Subnet ID. If not provided, a subnet from the default VPC will be used."
    Default: NONE
  AssociatePublicIpAddress:
    Type: String
    Description: "Whether to associate a public IP address to the instance"
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

Conditions:
  CreateNewIAMRole: !Equals [!Ref InstanceRole, NONE]
  UseCustomKMSId: !Not [!Equals [!Ref KMSId, NONE]]
  Encrypt: !Not [!Equals [!Ref Encrypt, NONE]]
  UseCustomSecurityGroup: !Not [!Equals [!Ref SecurityGroupId, NONE]]
  UseCustomSubnet: !Not [!Equals [!Ref SubnetId, NONE]]

Resources:
  BottlerocketNodeRole:
    Type: "AWS::IAM::Role"
    Condition: CreateNewIAMRole
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub "ec2.${AWS::URLSuffix}"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"

  BottlerocketNodeInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !If [CreateNewIAMRole, !Ref BottlerocketNodeRole, !Ref InstanceRole]

  BottlerocketLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref AmiID
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Name: !Ref BottlerocketNodeInstanceProfile
        UserData:
          Fn::Base64: |
            [settings.host-containers.admin]
            enabled = true
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 10
              VolumeType: gp3
              DeleteOnTermination: true
          - DeviceName: /dev/xvdb
            Ebs:
              VolumeSize: !Ref SnapshotSize
              VolumeType: gp3
              Encrypted:
                Fn::If:
                  - Encrypt
                  - true
                  - false
              KmsKeyId:
                Fn::If:
                  - UseCustomKMSId
                  - !Ref KMSId
                  - !Ref AWS::NoValue
              Throughput: 1000
              Iops: 4000
              DeleteOnTermination: true
        NetworkInterfaces:
          - AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
            DeviceIndex: "0"
            Groups:
              - !If [
                  UseCustomSecurityGroup,
                  !Ref SecurityGroupId,
                  !Ref "AWS::NoValue",
                ]
            SubnetId: !If [UseCustomSubnet, !Ref SubnetId, !Ref "AWS::NoValue"]

  BottlerocketInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref BottlerocketLaunchTemplate
        Version: !GetAtt BottlerocketLaunchTemplate.LatestVersionNumber

Outputs:
  InstanceId:
    Value: !Ref BottlerocketInstance
    Description: Instance Id
